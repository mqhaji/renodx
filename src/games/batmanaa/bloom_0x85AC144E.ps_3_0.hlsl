#include "./common.hlsli"

float BloomScale : register(c5);
float2 MinMaxBlurClamp : register(c4);
float4 MinZ_MaxZRatio : register(c2);
float4 PackedParameters : register(c0);
sampler2D SceneColorTexture : register(s0);

struct PS_IN {
  float4 texcoord : TEXCOORD;
  float4 texcoord1 : TEXCOORD1;
  float4 texcoord2 : TEXCOORD2;
  float4 texcoord3 : TEXCOORD3;
  float4 texcoord4 : TEXCOORD4;
  float4 texcoord5 : TEXCOORD5;
  float4 texcoord6 : TEXCOORD6;
  float4 texcoord7 : TEXCOORD7;
};

float4 main(PS_IN i)
    : COLOR {
  float4 o;

  float4 r0;
  float4 r1;
  float4 r2;
  float4 r3;
  float4 r4;
  float4 r5;
  float4 r6;
  float4 r7;
  float4 r8;
  float4 r9;
  float4 r10;
  float4 r11;
  float4 r12;
  float4 r13;
  float4 r14;
  float4 r15;
  float4 r16;
  float3 r17;
  r0 = tex2D(SceneColorTexture, i.texcoord);
  r1.xyz = -r0.xyz + 1;
  r1.xyz = (r1.xyz >= 0) ? 0 : 1;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.xyz = (-r1.x >= 0) ? 0 : r0.xyz;
  r2 = tex2D(SceneColorTexture, i.texcoord.wzzw);
  r3.xyz = -r2.xyz + 1;
  r3.xyz = (r3.xyz >= 0) ? 0 : 1;
  r1.w = dot(r3.xyz, r3.xyz);
  r3.xyz = (-r1.w >= 0) ? 0 : r2.xyz;
  r1.xyz = r1.xyz + r3.xyz;
  r3 = tex2D(SceneColorTexture, i.texcoord1);
  r4.xyz = -r3.xyz + 1;
  r4.xyz = (r4.xyz >= 0) ? 0 : 1;
  r1.w = dot(r4.xyz, r4.xyz);
  r4.xyz = (-r1.w >= 0) ? 0 : r3.xyz;
  r1.xyz = r1.xyz + r4.xyz;
  r4 = tex2D(SceneColorTexture, i.texcoord1.wzzw);
  r5.xyz = -r4.xyz + 1;
  r5.xyz = (r5.xyz >= 0) ? 0 : 1;
  r1.w = dot(r5.xyz, r5.xyz);
  r5.xyz = (-r1.w >= 0) ? 0 : r4.xyz;
  r1.xyz = r1.xyz + r5.xyz;
  r5 = tex2D(SceneColorTexture, i.texcoord2);
  r6.xyz = -r5.xyz + 1;
  r6.xyz = (r6.xyz >= 0) ? 0 : 1;
  r1.w = dot(r6.xyz, r6.xyz);
  r6.xyz = (-r1.w >= 0) ? 0 : r5.xyz;
  r1.xyz = r1.xyz + r6.xyz;
  r6 = tex2D(SceneColorTexture, i.texcoord2.wzzw);
  r7.xyz = -r6.xyz + 1;
  r7.xyz = (r7.xyz >= 0) ? 0 : 1;
  r1.w = dot(r7.xyz, r7.xyz);
  r7.xyz = (-r1.w >= 0) ? 0 : r6.xyz;
  r1.xyz = r1.xyz + r7.xyz;
  r7 = tex2D(SceneColorTexture, i.texcoord3);
  r8.xyz = -r7.xyz + 1;
  r8.xyz = (r8.xyz >= 0) ? 0 : 1;
  r1.w = dot(r8.xyz, r8.xyz);
  r8.xyz = (-r1.w >= 0) ? 0 : r7.xyz;
  r1.xyz = r1.xyz + r8.xyz;
  r8 = tex2D(SceneColorTexture, i.texcoord3.wzzw);
  r9.xyz = -r8.xyz + 1;
  r9.xyz = (r9.xyz >= 0) ? 0 : 1;
  r1.w = dot(r9.xyz, r9.xyz);
  r9.xyz = (-r1.w >= 0) ? 0 : r8.xyz;
  r1.xyz = r1.xyz + r9.xyz;
  r9 = tex2D(SceneColorTexture, i.texcoord4);
  r10.xyz = -r9.xyz + 1;
  r10.xyz = (r10.xyz >= 0) ? 0 : 1;
  r1.w = dot(r10.xyz, r10.xyz);
  r10.xyz = (-r1.w >= 0) ? 0 : r9.xyz;
  r1.xyz = r1.xyz + r10.xyz;
  r10 = tex2D(SceneColorTexture, i.texcoord4.wzzw);
  r11.xyz = -r10.xyz + 1;
  r11.xyz = (r11.xyz >= 0) ? 0 : 1;
  r1.w = dot(r11.xyz, r11.xyz);
  r11.xyz = (-r1.w >= 0) ? 0 : r10.xyz;
  r1.xyz = r1.xyz + r11.xyz;
  r11 = tex2D(SceneColorTexture, i.texcoord5);
  r12.xyz = -r11.xyz + 1;
  r12.xyz = (r12.xyz >= 0) ? 0 : 1;
  r1.w = dot(r12.xyz, r12.xyz);
  r12.xyz = (-r1.w >= 0) ? 0 : r11.xyz;
  r1.xyz = r1.xyz + r12.xyz;
  r12 = tex2D(SceneColorTexture, i.texcoord5.wzzw);
  r13.xyz = -r12.xyz + 1;
  r13.xyz = (r13.xyz >= 0) ? 0 : 1;
  r1.w = dot(r13.xyz, r13.xyz);
  r13.xyz = (-r1.w >= 0) ? 0 : r12.xyz;
  r1.xyz = r1.xyz + r13.xyz;
  r13 = tex2D(SceneColorTexture, i.texcoord6);
  r14.xyz = -r13.xyz + 1;
  r14.xyz = (r14.xyz >= 0) ? 0 : 1;
  r1.w = dot(r14.xyz, r14.xyz);
  r14.xyz = (-r1.w >= 0) ? 0 : r13.xyz;
  r1.xyz = r1.xyz + r14.xyz;
  r14 = tex2D(SceneColorTexture, i.texcoord6.wzzw);
  r15.xyz = -r14.xyz + 1;
  r15.xyz = (r15.xyz >= 0) ? 0 : 1;
  r1.w = dot(r15.xyz, r15.xyz);
  r15.xyz = (-r1.w >= 0) ? 0 : r14.xyz;
  r1.xyz = r1.xyz + r15.xyz;
  r15 = tex2D(SceneColorTexture, i.texcoord7);
  r16.xyz = -r15.xyz + 1;
  r16.xyz = (r16.xyz >= 0) ? 0 : 1;
  r1.w = dot(r16.xyz, r16.xyz);
  r16.xyz = (-r1.w >= 0) ? 0 : r15.xyz;
  r1.xyz = r1.xyz + r16.xyz;
  r16 = tex2D(SceneColorTexture, i.texcoord7.wzzw);
  r17.xyz = -r16.xyz + 1;
  r17.xyz = (r17.xyz >= 0) ? 0 : 1;
  r1.w = dot(r17.xyz, r17.xyz);
  r17.xyz = (-r1.w >= 0) ? 0 : r16.xyz;
  r1.xyz = r1.xyz + r17.xyz;
  r1.xyz = r1.xyz * BloomScale.x * CUSTOM_BLOOM;
  r1.xyz = r1.xyz * 0.0625;
  r1.w = r0.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r0.w = 1 / r1.w;
  r1.w = r2.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r2.w = 1 / r1.w;
  r0 = r0 + r2;
  r1.w = r3.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r3.w = 1 / r1.w;
  r0 = r0 + r3;
  r1.w = r4.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r4.w = 1 / r1.w;
  r0 = r0 + r4;
  r1.w = r5.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r5.w = 1 / r1.w;
  r0 = r0 + r5;
  r1.w = r6.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r6.w = 1 / r1.w;
  r0 = r0 + r6;
  r1.w = r7.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r7.w = 1 / r1.w;
  r0 = r0 + r7;
  r1.w = r8.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r8.w = 1 / r1.w;
  r0 = r0 + r8;
  r1.w = r9.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r9.w = 1 / r1.w;
  r0 = r0 + r9;
  r1.w = r10.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r10.w = 1 / r1.w;
  r0 = r0 + r10;
  r1.w = r11.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r11.w = 1 / r1.w;
  r0 = r0 + r11;
  r1.w = r12.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r12.w = 1 / r1.w;
  r0 = r0 + r12;
  r1.w = r13.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r13.w = 1 / r1.w;
  r0 = r0 + r13;
  r1.w = r14.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r14.w = 1 / r1.w;
  r0 = r0 + r14;
  r1.w = r15.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r15.w = 1 / r1.w;
  r0 = r0 + r15;
  r1.w = r16.w * MinZ_MaxZRatio.z + -MinZ_MaxZRatio.w;
  r16.w = 1 / r1.w;
  r0 = r0 + r16;
  r2.z = 0.0625;
  r0.w = r0.w * r2.z + -PackedParameters.x;
  r0.xyz = r0.xyz * 0.0625;
  r1.w = (r0.w >= 0) ? MinMaxBlurClamp.y : MinMaxBlurClamp.x;
  r0.w = abs(r0.w) * PackedParameters.y;
  r2.x = r0.w + -0.0001;
  r0.w = log2(r0.w);
  r0.w = (r2.x >= 0) ? r0.w : -13.287712;
  r0.w = r0.w * PackedParameters.z;
  r0.w = exp2(r0.w);
  r2.w = min(r0.w, r1.w);
  r2.xyz = r2.w * r0.xyz + r1.xyz;
  o = r2 * 0.25;

  return o;
}
