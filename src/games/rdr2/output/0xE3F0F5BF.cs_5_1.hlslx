cbuffer CB0_buf : register(b0, space0)
{
    uint4 CB0_m0 : packoffset(c0);
    uint4 CB0_m1 : packoffset(c1);
    uint4 CB0_m2 : packoffset(c2);
    uint4 CB0_m3 : packoffset(c3);
    uint4 CB0_m4 : packoffset(c4);
    uint4 CB0_m5 : packoffset(c5);
    uint4 CB0_m6 : packoffset(c6);
    uint4 CB0_m7 : packoffset(c7);
    uint4 CB0_m8 : packoffset(c8);
    uint4 CB0_m9 : packoffset(c9);
    uint4 CB0_m10 : packoffset(c10);
    uint4 CB0_m11 : packoffset(c11);
    float4 CB0_m12 : packoffset(c12);
    float4 CB0_m13 : packoffset(c13);
    float2 CB0_m14 : packoffset(c14);
    uint2 CB0_m15 : packoffset(c14.z);
};

RWTexture3D<float4> U0 : register(u1, space0);

static uint3 gl_WorkGroupID;
static uint3 gl_GlobalInvocationID;
struct SPIRV_Cross_Input
{
    uint3 gl_WorkGroupID : SV_GroupID;
    uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
};

float dp3_f32(float3 a, float3 b)
{
    precise float _142 = a.x * b.x;
    return mad(a.z, b.z, mad(a.y, b.y, _142));
}

float dp2_f32(float2 a, float2 b)
{
    precise float _130 = a.x * b.x;
    return mad(a.y, b.y, _130);
}

void comp_main()
{
    float _167 = float(CB0_m15.y - 1u);
    float _168 = float(gl_GlobalInvocationID.x) / _167;
    float _169 = float(gl_GlobalInvocationID.y) / _167;
    float _170 = float(gl_WorkGroupID.z) / _167;
    float _244;
    float _245;
    float _246;
    if (CB0_m15.x == 1u)
    {
        _244 = exp2((_170 - CB0_m12.z) / CB0_m12.y);
        _245 = exp2((_169 - CB0_m12.z) / CB0_m12.y);
        _246 = exp2((_168 - CB0_m12.z) / CB0_m12.y);
    }
    else
    {
        float _241;
        float _242;
        float _243;
        if (CB0_m15.x == 2u)
        {
            float _201 = exp2(log2(_168) * 0.0126833133399486541748046875f);
            float _202 = exp2(log2(_169) * 0.0126833133399486541748046875f);
            float _203 = exp2(log2(_170) * 0.0126833133399486541748046875f);
            float _204 = _201 - 0.8359375f;
            float _205 = _202 - 0.8359375f;
            float _206 = _203 - 0.8359375f;
            _241 = mad(exp2(log2(((_206 < 0.0f) ? 0.0f : _206) / mad(_203, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), 10000.0f, -CB0_m12.z) / CB0_m12.y;
            _242 = mad(exp2(log2(((_205 < 0.0f) ? 0.0f : _205) / mad(_202, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), 10000.0f, -CB0_m12.z) / CB0_m12.y;
            _243 = mad(exp2(log2(((_204 < 0.0f) ? 0.0f : _204) / mad(_201, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), 10000.0f, -CB0_m12.z) / CB0_m12.y;
        }
        else
        {
            _241 = _170;
            _242 = _169;
            _243 = _168;
        }
        _244 = _241;
        _245 = _242;
        _246 = _243;
    }
    float _249 = CB0_m12.w * 0.00999999977648258209228515625f;
    float3 _250 = float3(_246, _245, _244);
    float3 _254 = float3(dp3_f32(float3(0.41245639324188232421875f, 0.3575761020183563232421875f, 0.180437505245208740234375f), _250), dp3_f32(float3(0.21267290413379669189453125f, 0.715152204036712646484375f, 0.072175003588199615478515625f), _250), dp3_f32(float3(0.01933390088379383087158203125f, 0.119191996753215789794921875f, 0.950304090976715087890625f), _250));
    float _270 = exp2(log2(max(dp3_f32(float3(0.359200000762939453125f, 0.69760000705718994140625f, -0.0357999987900257110595703125f), _254), 0.0f) / _249) * 0.1593017578125f);
    float _271 = exp2(log2(max(dp3_f32(float3(-0.192200005054473876953125f, 1.10039997100830078125f, 0.07549999654293060302734375f), _254), 0.0f) / _249) * 0.1593017578125f);
    float _272 = exp2(log2(max(dp3_f32(float3(0.007000000216066837310791015625f, 0.0749000012874603271484375f, 0.84340000152587890625f), _254), 0.0f) / _249) * 0.1593017578125f);
    float _288 = exp2(log2(mad(_270, 18.8515625f, 0.8359375f) / mad(_270, 18.6875f, 1.0f)) * 78.84375f);
    float _289 = exp2(log2(mad(_271, 18.8515625f, 0.8359375f) / mad(_271, 18.6875f, 1.0f)) * 78.84375f);
    float _292 = dp2_f32(0.5f.xx, float2(_288, _289));
    float3 _293 = float3(_288, _289, exp2(log2(mad(_272, 18.8515625f, 0.8359375f) / mad(_272, 18.6875f, 1.0f)) * 78.84375f));
    float _294 = dp3_f32(float3(1.61370003223419189453125f, -3.323400020599365234375f, 1.70969998836517333984375f), _293);
    float _295 = dp3_f32(float3(4.377999782562255859375f, -4.245500087738037109375f, -0.132499992847442626953125f), _293);
    float _299 = _292 - 1.0f;
    float _302 = clamp(_299 * (1.0f / (CB0_m13.x - 1.0f)), 0.0f, 1.0f);
    float _310 = exp2(log2(mad(_302, -2.0f, 3.0f) * (_302 * _302)) * CB0_m13.y);
    float3 _314 = float3(_292 * 1.0f, _310 * _294, _310 * _295);
    float _324 = exp2(log2(dp3_f32(float3(1.0f, 0.008605145849287509918212890625f, 0.111035607755184173583984375f), _314)) * 0.0126833133399486541748046875f);
    float _325 = exp2(log2(dp3_f32(float3(1.0f, -0.008605145849287509918212890625f, -0.111035607755184173583984375f), _314)) * 0.0126833133399486541748046875f);
    float _326 = exp2(log2(dp3_f32(float3(1.0f, 0.560048878192901611328125f, -0.3206374645233154296875f), _314)) * 0.0126833133399486541748046875f);
    float3 _351 = float3(_249 * exp2(log2(max(_324 - 0.8359375f, 0.0f) / mad(_324, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), _249 * exp2(log2(max(_325 - 0.8359375f, 0.0f) / mad(_325, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), _249 * exp2(log2(max(_326 - 0.8359375f, 0.0f) / mad(_326, -18.6875f, 18.8515625f)) * 6.277394771575927734375f));
    float3 _355 = float3(dp3_f32(float3(2.07017993927001953125f, -1.32645690441131591796875f, 0.2066160142421722412109375f), _351), dp3_f32(float3(0.3649882376194000244140625f, 0.6804673671722412109375f, -0.0454217530786991119384765625f), _351), dp3_f32(float3(-0.049595542252063751220703125f, -0.0494211614131927490234375f, 1.18799591064453125f), _351));
    float _356 = dp3_f32(float3(3.2404549121856689453125f, -1.53713881969451904296875f, -0.4985315501689910888671875f), _355);
    float _357 = dp3_f32(float3(-0.969266414642333984375f, 1.876010894775390625f, 0.041556082665920257568359375f), _355);
    float _358 = dp3_f32(float3(0.0556434206664562225341796875f, -0.20402584969997406005859375f, 1.05722510814666748046875f), _355);
    float _360 = max(_356, max(_357, _358));
    float _363 = 1.0f - CB0_m13.z;
    float _371 = (CB0_m13.z > _360) ? _360 : mad(_363, 1.0f - exp2(((_360 - CB0_m13.z) / _363) * (-1.44269502162933349609375f)), CB0_m13.z);
    float _399 = (_356 < CB0_m13.z) ? _356 : mad(_363, 1.0f - exp2(((_356 - CB0_m13.z) / _363) * (-1.44269502162933349609375f)), CB0_m13.z);
    float _400 = (_357 < CB0_m13.z) ? _357 : mad(_363, 1.0f - exp2(((_357 - CB0_m13.z) / _363) * (-1.44269502162933349609375f)), CB0_m13.z);
    float _401 = (_358 < CB0_m13.z) ? _358 : mad(_363, 1.0f - exp2(((_358 - CB0_m13.z) / _363) * (-1.44269502162933349609375f)), CB0_m13.z);
    float3 _410 = float3(mad(CB0_m13.w, ((_356 * _371) / _360) - _399, _399), mad(CB0_m13.w, ((_357 * _371) / _360) - _400, _400), mad(CB0_m13.w, ((_358 * _371) / _360) - _401, _401));
    float3 _414 = float3(dp3_f32(float3(0.41245639324188232421875f, 0.3575761020183563232421875f, 0.180437505245208740234375f), _410), dp3_f32(float3(0.21267290413379669189453125f, 0.715152204036712646484375f, 0.072175003588199615478515625f), _410), dp3_f32(float3(0.01933390088379383087158203125f, 0.119191996753215789794921875f, 0.950304090976715087890625f), _410));
    float _430 = exp2(log2(max(dp3_f32(float3(0.359200000762939453125f, 0.69760000705718994140625f, -0.0357999987900257110595703125f), _414), 0.0f) / _249) * 0.1593017578125f);
    float _431 = exp2(log2(max(dp3_f32(float3(-0.192200005054473876953125f, 1.10039997100830078125f, 0.07549999654293060302734375f), _414), 0.0f) / _249) * 0.1593017578125f);
    float _432 = exp2(log2(max(dp3_f32(float3(0.007000000216066837310791015625f, 0.0749000012874603271484375f, 0.84340000152587890625f), _414), 0.0f) / _249) * 0.1593017578125f);
    float _448 = exp2(log2(mad(_430, 18.8515625f, 0.8359375f) / mad(_430, 18.6875f, 1.0f)) * 78.84375f);
    float _449 = exp2(log2(mad(_431, 18.8515625f, 0.8359375f) / mad(_431, 18.6875f, 1.0f)) * 78.84375f);
    float _452 = dp2_f32(0.5f.xx, float2(_448, _449));
    float3 _453 = float3(_448, _449, exp2(log2(mad(_432, 18.8515625f, 0.8359375f) / mad(_432, 18.6875f, 1.0f)) * 78.84375f));
    float _454 = dp3_f32(float3(1.61370003223419189453125f, -3.323400020599365234375f, 1.70969998836517333984375f), _453);
    float _455 = dp3_f32(float3(4.377999782562255859375f, -4.245500087738037109375f, -0.132499992847442626953125f), _453);
    float _461 = clamp(_299 * (1.0f / (CB0_m14.y - 1.0f)), 0.0f, 1.0f);
    float _467 = (mad(_461, -2.0f, 3.0f) * (_461 * _461)) * CB0_m14.x;
    float _470 = max(_292, 0.001000000047497451305389404296875f);
    float3 _477 = float3(_452, mad(_467, ((_294 * _452) / _470) - _454, _454), mad(((_295 * _452) / _470) - _455, _467, _455));
    float _487 = exp2(log2(dp3_f32(float3(1.0f, 0.008605145849287509918212890625f, 0.111035607755184173583984375f), _477)) * 0.0126833133399486541748046875f);
    float _488 = exp2(log2(dp3_f32(float3(1.0f, -0.008605145849287509918212890625f, -0.111035607755184173583984375f), _477)) * 0.0126833133399486541748046875f);
    float _489 = exp2(log2(dp3_f32(float3(1.0f, 0.560048878192901611328125f, -0.3206374645233154296875f), _477)) * 0.0126833133399486541748046875f);
    float3 _514 = float3(_249 * exp2(log2(max(_487 - 0.8359375f, 0.0f) / mad(_487, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), _249 * exp2(log2(max(_488 - 0.8359375f, 0.0f) / mad(_488, -18.6875f, 18.8515625f)) * 6.277394771575927734375f), _249 * exp2(log2(max(_489 - 0.8359375f, 0.0f) / mad(_489, -18.6875f, 18.8515625f)) * 6.277394771575927734375f));
    float3 _518 = float3(dp3_f32(float3(2.07017993927001953125f, -1.32645690441131591796875f, 0.2066160142421722412109375f), _514), dp3_f32(float3(0.3649882376194000244140625f, 0.6804673671722412109375f, -0.0454217530786991119384765625f), _514), dp3_f32(float3(-0.049595542252063751220703125f, -0.0494211614131927490234375f, 1.18799591064453125f), _514));
    U0[uint3(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, gl_WorkGroupID.z)] = float4(dp3_f32(float3(3.2404549121856689453125f, -1.53713881969451904296875f, -0.4985315501689910888671875f), _518), dp3_f32(float3(-0.969266414642333984375f, 1.876010894775390625f, 0.041556082665920257568359375f), _518), dp3_f32(float3(0.0556434206664562225341796875f, -0.20402584969997406005859375f, 1.05722510814666748046875f), _518), 1.0f);
}

[numthreads(32, 32, 1)]
void main(SPIRV_Cross_Input stage_input)
{
    gl_WorkGroupID = stage_input.gl_WorkGroupID;
    gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
    comp_main();
}
